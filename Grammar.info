-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from Grammar.y
-----------------------------------------------------------------------------


terminal AND is unused
terminal OR is unused
terminal true is unused
terminal false is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseCalc -> stmts                          (0)
	stmts -> stmt                                      (1)
	stmts -> stmts stmt                                (2)
	stmt -> exp ';'                                    (3)
	exp -> var                                         (4)
	exp -> int                                         (5)
	exp -> WHERE '{' '[' listElement ']' '}'           (6)
	exp -> IN exp                                      (7)
	exp -> AS exp                                      (8)
	exp -> IMPORT exp AS exp                           (9)
	exp -> FROM '[' listVar ']' GET '[' listElement ']'   (10)
	exp -> INTO exp                                    (11)
	exp -> IF exp THEN exp ELSE exp                    (12)
	exp -> int '<' int                                 (13)
	exp -> int '>' int                                 (14)
	exp -> int '+' int                                 (15)
	exp -> int '-' int                                 (16)
	exp -> int '<=' int                                (17)
	exp -> int '>=' int                                (18)
	exp -> '(' exp ')'                                 (19)
	listVar -> var                                     (20)
	listVar -> var ',' listVar                         (21)
	listElement -> listElementContent                  (22)
	listElement -> listElementContent ',' listElement   (23)
	listElementContent -> subj                         (24)
	listElementContent -> pred                         (25)
	listElementContent -> obj                          (26)
	listElementContent -> subj IN exp                  (27)
	listElementContent -> pred IN exp                  (28)
	listElementContent -> obj IN exp                   (29)
	listElementContent -> exp                          (30)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { IntToken _ $$ }
	var            { VarToken _ $$ }
	IMPORT         { ImportToken _ }
	WHERE          { WhereToken _ }
	INTO           { IntoToken _ }
	IN             { InToken _ }
	AS             { AsToken _ }
	FROM           { FromToken _ }
	GET            { GetToken _ }
	AND            { AndToken _ }
	OR             { OrToken _ }
	IF             { IfToken _ }
	THEN           { ThenToken _ }
	ELSE           { ElseToken _ }
	subj           { SubjectToken _ }
	pred           { PredicateToken _ }
	obj            { ObjectToken _ }
	true           { TrueToken _ }
	false          { FalseToken _ }
	';'            { SemiColonToken _ }
	'{'            { CurLToken _ }
	'}'            { CurRToken _ }
	'<'            { AngBracketLToken _ }
	'>'            { AngBracketRToken _ }
	'<='           { LessThanEqualToken _ }
	'>='           { MoreThanEqualToken _ }
	'+'            { PlusToken _ }
	'-'            { MinusToken _ }
	'('            { ParenRToken _ }
	')'            { ParenLToken _ }
	'['            { BracketLToken _ }
	']'            { BracketRToken _ }
	','            { CommaToken _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseCalc rule  0
	stmts           rules 1, 2
	stmt            rule  3
	exp             rules 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
	listVar         rules 20, 21
	listElement     rules 22, 23
	listElementContent rules 24, 25, 26, 27, 28, 29, 30

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	stmts          goto state 14
	stmt           goto state 2
	exp            goto state 3

State 1


	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	stmt           goto state 2
	exp            goto state 3

State 2

	stmts -> stmt .                                     (rule 1)

	int            reduce using rule 1
	var            reduce using rule 1
	IMPORT         reduce using rule 1
	WHERE          reduce using rule 1
	INTO           reduce using rule 1
	IN             reduce using rule 1
	AS             reduce using rule 1
	FROM           reduce using rule 1
	IF             reduce using rule 1
	'('            reduce using rule 1
	%eof           reduce using rule 1


State 3

	stmt -> exp . ';'                                   (rule 3)

	';'            shift, and enter state 30


State 4

	exp -> int .                                        (rule 5)
	exp -> int . '<' int                                (rule 13)
	exp -> int . '>' int                                (rule 14)
	exp -> int . '+' int                                (rule 15)
	exp -> int . '-' int                                (rule 16)
	exp -> int . '<=' int                               (rule 17)
	exp -> int . '>=' int                               (rule 18)

	AS             reduce using rule 5
	THEN           reduce using rule 5
	ELSE           reduce using rule 5
	';'            reduce using rule 5
	'<'            shift, and enter state 24
	'>'            shift, and enter state 25
	'<='           shift, and enter state 26
	'>='           shift, and enter state 27
	'+'            shift, and enter state 28
	'-'            shift, and enter state 29
	')'            reduce using rule 5
	']'            reduce using rule 5
	','            reduce using rule 5


State 5

	exp -> var .                                        (rule 4)

	AS             reduce using rule 4
	THEN           reduce using rule 4
	ELSE           reduce using rule 4
	';'            reduce using rule 4
	')'            reduce using rule 4
	']'            reduce using rule 4
	','            reduce using rule 4


State 6

	exp -> IMPORT . exp AS exp                          (rule 9)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 23

State 7

	exp -> WHERE . '{' '[' listElement ']' '}'          (rule 6)

	'{'            shift, and enter state 22


State 8

	exp -> INTO . exp                                   (rule 11)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 21

State 9

	exp -> IN . exp                                     (rule 7)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 20

State 10

	exp -> AS . exp                                     (rule 8)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 19

State 11

	exp -> FROM . '[' listVar ']' GET '[' listElement ']'    (rule 10)

	'['            shift, and enter state 18


State 12

	exp -> IF . exp THEN exp ELSE exp                   (rule 12)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 17

State 13

	exp -> '(' . exp ')'                                (rule 19)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 16

State 14

	%start_parseCalc -> stmts .                         (rule 0)
	stmts -> stmts . stmt                               (rule 2)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13
	%eof           accept

	stmt           goto state 15
	exp            goto state 3

State 15

	stmts -> stmts stmt .                               (rule 2)

	int            reduce using rule 2
	var            reduce using rule 2
	IMPORT         reduce using rule 2
	WHERE          reduce using rule 2
	INTO           reduce using rule 2
	IN             reduce using rule 2
	AS             reduce using rule 2
	FROM           reduce using rule 2
	IF             reduce using rule 2
	'('            reduce using rule 2
	%eof           reduce using rule 2


State 16

	exp -> '(' exp . ')'                                (rule 19)

	')'            shift, and enter state 42


State 17

	exp -> IF exp . THEN exp ELSE exp                   (rule 12)

	THEN           shift, and enter state 41


State 18

	exp -> FROM '[' . listVar ']' GET '[' listElement ']'    (rule 10)

	var            shift, and enter state 40

	listVar        goto state 39

State 19

	exp -> AS exp .                                     (rule 8)

	AS             reduce using rule 8
	THEN           reduce using rule 8
	ELSE           reduce using rule 8
	';'            reduce using rule 8
	')'            reduce using rule 8
	']'            reduce using rule 8
	','            reduce using rule 8


State 20

	exp -> IN exp .                                     (rule 7)

	AS             reduce using rule 7
	THEN           reduce using rule 7
	ELSE           reduce using rule 7
	';'            reduce using rule 7
	')'            reduce using rule 7
	']'            reduce using rule 7
	','            reduce using rule 7


State 21

	exp -> INTO exp .                                   (rule 11)

	AS             reduce using rule 11
	THEN           reduce using rule 11
	ELSE           reduce using rule 11
	';'            reduce using rule 11
	')'            reduce using rule 11
	']'            reduce using rule 11
	','            reduce using rule 11


State 22

	exp -> WHERE '{' . '[' listElement ']' '}'          (rule 6)

	'['            shift, and enter state 38


State 23

	exp -> IMPORT exp . AS exp                          (rule 9)

	AS             shift, and enter state 37


State 24

	exp -> int '<' . int                                (rule 13)

	int            shift, and enter state 36


State 25

	exp -> int '>' . int                                (rule 14)

	int            shift, and enter state 35


State 26

	exp -> int '<=' . int                               (rule 17)

	int            shift, and enter state 34


State 27

	exp -> int '>=' . int                               (rule 18)

	int            shift, and enter state 33


State 28

	exp -> int '+' . int                                (rule 15)

	int            shift, and enter state 32


State 29

	exp -> int '-' . int                                (rule 16)

	int            shift, and enter state 31


State 30

	stmt -> exp ';' .                                   (rule 3)

	int            reduce using rule 3
	var            reduce using rule 3
	IMPORT         reduce using rule 3
	WHERE          reduce using rule 3
	INTO           reduce using rule 3
	IN             reduce using rule 3
	AS             reduce using rule 3
	FROM           reduce using rule 3
	IF             reduce using rule 3
	'('            reduce using rule 3
	%eof           reduce using rule 3


State 31

	exp -> int '-' int .                                (rule 16)

	AS             reduce using rule 16
	THEN           reduce using rule 16
	ELSE           reduce using rule 16
	';'            reduce using rule 16
	')'            reduce using rule 16
	']'            reduce using rule 16
	','            reduce using rule 16


State 32

	exp -> int '+' int .                                (rule 15)

	AS             reduce using rule 15
	THEN           reduce using rule 15
	ELSE           reduce using rule 15
	';'            reduce using rule 15
	')'            reduce using rule 15
	']'            reduce using rule 15
	','            reduce using rule 15


State 33

	exp -> int '>=' int .                               (rule 18)

	AS             reduce using rule 18
	THEN           reduce using rule 18
	ELSE           reduce using rule 18
	';'            reduce using rule 18
	')'            reduce using rule 18
	']'            reduce using rule 18
	','            reduce using rule 18


State 34

	exp -> int '<=' int .                               (rule 17)

	AS             reduce using rule 17
	THEN           reduce using rule 17
	ELSE           reduce using rule 17
	';'            reduce using rule 17
	')'            reduce using rule 17
	']'            reduce using rule 17
	','            reduce using rule 17


State 35

	exp -> int '>' int .                                (rule 14)

	AS             reduce using rule 14
	THEN           reduce using rule 14
	ELSE           reduce using rule 14
	';'            reduce using rule 14
	')'            reduce using rule 14
	']'            reduce using rule 14
	','            reduce using rule 14


State 36

	exp -> int '<' int .                                (rule 13)

	AS             reduce using rule 13
	THEN           reduce using rule 13
	ELSE           reduce using rule 13
	';'            reduce using rule 13
	')'            reduce using rule 13
	']'            reduce using rule 13
	','            reduce using rule 13


State 37

	exp -> IMPORT exp AS . exp                          (rule 9)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 52

State 38

	exp -> WHERE '{' '[' . listElement ']' '}'          (rule 6)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	subj           shift, and enter state 49
	pred           shift, and enter state 50
	obj            shift, and enter state 51
	'('            shift, and enter state 13

	exp            goto state 46
	listElement    goto state 47
	listElementContentgoto state 48

State 39

	exp -> FROM '[' listVar . ']' GET '[' listElement ']'    (rule 10)

	']'            shift, and enter state 45


State 40

	listVar -> var .                                    (rule 20)
	listVar -> var . ',' listVar                        (rule 21)

	']'            reduce using rule 20
	','            shift, and enter state 44


State 41

	exp -> IF exp THEN . exp ELSE exp                   (rule 12)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 43

State 42

	exp -> '(' exp ')' .                                (rule 19)

	AS             reduce using rule 19
	THEN           reduce using rule 19
	ELSE           reduce using rule 19
	';'            reduce using rule 19
	')'            reduce using rule 19
	']'            reduce using rule 19
	','            reduce using rule 19


State 43

	exp -> IF exp THEN exp . ELSE exp                   (rule 12)

	ELSE           shift, and enter state 60


State 44

	listVar -> var ',' . listVar                        (rule 21)

	var            shift, and enter state 40

	listVar        goto state 59

State 45

	exp -> FROM '[' listVar ']' . GET '[' listElement ']'    (rule 10)

	GET            shift, and enter state 58


State 46

	listElementContent -> exp .                         (rule 30)

	']'            reduce using rule 30
	','            reduce using rule 30


State 47

	exp -> WHERE '{' '[' listElement . ']' '}'          (rule 6)

	']'            shift, and enter state 57


State 48

	listElement -> listElementContent .                 (rule 22)
	listElement -> listElementContent . ',' listElement    (rule 23)

	']'            reduce using rule 22
	','            shift, and enter state 56


State 49

	listElementContent -> subj .                        (rule 24)
	listElementContent -> subj . IN exp                 (rule 27)

	IN             shift, and enter state 55
	']'            reduce using rule 24
	','            reduce using rule 24


State 50

	listElementContent -> pred .                        (rule 25)
	listElementContent -> pred . IN exp                 (rule 28)

	IN             shift, and enter state 54
	']'            reduce using rule 25
	','            reduce using rule 25


State 51

	listElementContent -> obj .                         (rule 26)
	listElementContent -> obj . IN exp                  (rule 29)

	IN             shift, and enter state 53
	']'            reduce using rule 26
	','            reduce using rule 26


State 52

	exp -> IMPORT exp AS exp .                          (rule 9)

	AS             reduce using rule 9
	THEN           reduce using rule 9
	ELSE           reduce using rule 9
	';'            reduce using rule 9
	')'            reduce using rule 9
	']'            reduce using rule 9
	','            reduce using rule 9


State 53

	listElementContent -> obj IN . exp                  (rule 29)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 67

State 54

	listElementContent -> pred IN . exp                 (rule 28)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 66

State 55

	listElementContent -> subj IN . exp                 (rule 27)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 65

State 56

	listElement -> listElementContent ',' . listElement    (rule 23)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	subj           shift, and enter state 49
	pred           shift, and enter state 50
	obj            shift, and enter state 51
	'('            shift, and enter state 13

	exp            goto state 46
	listElement    goto state 64
	listElementContentgoto state 48

State 57

	exp -> WHERE '{' '[' listElement ']' . '}'          (rule 6)

	'}'            shift, and enter state 63


State 58

	exp -> FROM '[' listVar ']' GET . '[' listElement ']'    (rule 10)

	'['            shift, and enter state 62


State 59

	listVar -> var ',' listVar .                        (rule 21)

	']'            reduce using rule 21


State 60

	exp -> IF exp THEN exp ELSE . exp                   (rule 12)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	'('            shift, and enter state 13

	exp            goto state 61

State 61

	exp -> IF exp THEN exp ELSE exp .                   (rule 12)

	AS             reduce using rule 12
	THEN           reduce using rule 12
	ELSE           reduce using rule 12
	';'            reduce using rule 12
	')'            reduce using rule 12
	']'            reduce using rule 12
	','            reduce using rule 12


State 62

	exp -> FROM '[' listVar ']' GET '[' . listElement ']'    (rule 10)

	int            shift, and enter state 4
	var            shift, and enter state 5
	IMPORT         shift, and enter state 6
	WHERE          shift, and enter state 7
	INTO           shift, and enter state 8
	IN             shift, and enter state 9
	AS             shift, and enter state 10
	FROM           shift, and enter state 11
	IF             shift, and enter state 12
	subj           shift, and enter state 49
	pred           shift, and enter state 50
	obj            shift, and enter state 51
	'('            shift, and enter state 13

	exp            goto state 46
	listElement    goto state 68
	listElementContentgoto state 48

State 63

	exp -> WHERE '{' '[' listElement ']' '}' .          (rule 6)

	AS             reduce using rule 6
	THEN           reduce using rule 6
	ELSE           reduce using rule 6
	';'            reduce using rule 6
	')'            reduce using rule 6
	']'            reduce using rule 6
	','            reduce using rule 6


State 64

	listElement -> listElementContent ',' listElement .    (rule 23)

	']'            reduce using rule 23


State 65

	listElementContent -> subj IN exp .                 (rule 27)

	']'            reduce using rule 27
	','            reduce using rule 27


State 66

	listElementContent -> pred IN exp .                 (rule 28)

	']'            reduce using rule 28
	','            reduce using rule 28


State 67

	listElementContent -> obj IN exp .                  (rule 29)

	']'            reduce using rule 29
	','            reduce using rule 29


State 68

	exp -> FROM '[' listVar ']' GET '[' listElement . ']'    (rule 10)

	']'            shift, and enter state 69


State 69

	exp -> FROM '[' listVar ']' GET '[' listElement ']' .    (rule 10)

	AS             reduce using rule 10
	THEN           reduce using rule 10
	ELSE           reduce using rule 10
	';'            reduce using rule 10
	')'            reduce using rule 10
	']'            reduce using rule 10
	','            reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 31
Number of terminals: 33
Number of non-terminals: 7
Number of states: 70
